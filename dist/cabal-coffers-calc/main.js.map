{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  public tapped = false;\n  public state = {\n    manaPool: 0,\n\n    totalCoffers: [],\n    tappedCoffers: 0,\n\n    totalSwamp: [],\n    tappedSwamp: 0,\n    untappedSwamp: 0,\n\n    isCoffersSwamp: false\n  }\n\n  public card = {\n    tapped: false\n  }\n\n  ngOnInit(): void { }\n\n  public counter(i: number) {\n    return new Array(i);\n  }\n\n  public setCoffers(event): void {\n    this.state.isCoffersSwamp = event.checked;\n  }\n  public processTappedCoffers(direction: number): void {\n    direction === 1 ? this.state.tappedCoffers += 1 : this.state.tappedCoffers -= 1;\n  }\n  public processSwamp(direction: number): void {\n    direction === 1 ? this.state.totalSwamp.push({ ...this.card }) : this.state.totalSwamp.pop();\n  }\n  public processCoffers(direction: number): void {\n    direction === 1 ? this.state.totalCoffers.push({ ...this.card }) : this.state.totalCoffers.pop();\n  }\n\n  public calculate(): void {\n\n    if (!this.state.totalSwamp) {\n      return;\n    }\n\n\n    // const tappedCoffers = this.state.tappedCoffers;\n    const tappedCoffers = 1;\n    const isCoffersSwamp = this.state.isCoffersSwamp;\n\n    const coffersCost = isCoffersSwamp ? 3 : 2;\n    const totalSwamp = isCoffersSwamp ? this.state.totalSwamp.length + this.state.totalCoffers.length : this.state.totalSwamp.length;\n\n    let manaPool = 0;\n    for (let i = 0; i < tappedCoffers; i++) {\n      manaPool += totalSwamp;\n    }\n\n    this.state.isCoffersSwamp = isCoffersSwamp;\n    this.state.totalCoffers = this.state.totalCoffers;\n\n    // 3 swamp\n    // 2 coffers\n    // tap 2 swamp + 1 coffer = +3 in mana pool\n    // 1 swamp available\n    // 1 swamp + -1 mana in pool + 1 coffer = +3 in mana pool [+2 in current mana pool]\n\n\n    this.state.tappedSwamp = (tappedCoffers * coffersCost);\n\n    let i = 0;\n    for (let swamp of this.state.totalSwamp) {\n      if (!swamp.tapped && i < this.state.tappedSwamp) {\n        swamp.tapped = true;\n        i++;\n      }\n    }\n    // for (let i = 0; i < this.state.tappedSwamp; i++) {\n    //   this.state.totalSwamp[i].tapped = true;\n    // }\n    this.state.untappedSwamp = (totalSwamp - (tappedCoffers * coffersCost));\n    this.state.manaPool += manaPool;\n  }\n\n  public reset(): void {\n    this.state = {\n      manaPool: 0,\n      totalCoffers: [],\n      tappedCoffers: 0,\n      totalSwamp: [],\n      tappedSwamp: 0,\n      untappedSwamp: 0,\n      isCoffersSwamp: false\n    }\n  }\n}\n","<div class=\"content\">\n  <div class=\"details\">\n    <div class=\"header\">\n      <h3>Cabal Coffers Calculator</h3>\n      <div>TODO</div>\n      <div>1. allow multiple coffers with mana pool</div>\n      <div>2. dont allow untap to calculate</div>\n      <button mat-icon-button (click)=\"reset()\" color=\"primary\">\n        <mat-icon>refresh</mat-icon>\n      </button>\n    </div>\n    <div class=\"options\">\n      <div>\n        <div>\n          <span>\n            <mat-slide-toggle class=\"example-margin\" (change)=\"setCoffers($event)\" [checked]=\"state?.isCoffersSwamp\"> Is\n              Coffers Swamp? </mat-slide-toggle>\n          </span>\n        </div>\n        <div>\n          <span>Total Coffers :&nbsp;</span>\n          <span>{{state.totalCoffers.length}}</span>\n          <span>\n            <button mat-icon-button (click)=\"processCoffers(-1)\" color=\"primary\">\n              <mat-icon>chevron_left</mat-icon>\n            </button>\n            <button mat-icon-button (click)=\"processCoffers(1)\" color=\"primary\">\n              <mat-icon>chevron_right</mat-icon>\n            </button>\n          </span>\n        </div>\n        <div>\n          <span>Total Swamp :&nbsp;</span>\n          <span>\n            <span>{{state.totalSwamp.length}}</span>\n            <button mat-icon-button (click)=\"processSwamp(-1)\" color=\"primary\">\n              <mat-icon>chevron_left</mat-icon>\n            </button>\n            <button mat-icon-button (click)=\"processSwamp(1)\" color=\"primary\">\n              <mat-icon>chevron_right</mat-icon>\n            </button>\n          </span>\n        </div>\n      </div>\n    </div>\n    <div>Mana pool: {{state.manaPool}}</div>\n    <div class=\"manaPool\">\n      <div *ngFor=\"let i of counter(state.manaPool)\" class=\"icon black manaPool\"></div>\n    </div>\n    <div>\n      <div>tapped:{{state.tappedSwamp}}</div>\n      <div>Untapped:{{state.untappedSwamp}}</div>\n    </div>\n    <div class=\"container\">\n      <img *ngFor=\"let coffer of state.totalCoffers\" src=\"/assets/cabal-coffers.jpeg\" alt=\"Cabal Coffers\" class=\"card\"\n        (click)=\"coffer.tapped = !coffer.tapped; calculate()\" [ngClass]=\"{'tapped': coffer.tapped}\">\n    </div>\n    <div class=\"container\">\n      <img *ngFor=\"let coffer of state.totalSwamp\" src=\"/assets/swamp.jpeg\" alt=\"Cabal Coffers\" class=\"card\"\n        (click)=\"coffer.tapped = !coffer.tapped\" [ngClass]=\"{'tapped': coffer.tapped}\">\n    </div>\n  </div>\n  <!-- <div>\n    <span>\n      <button mat-icon-button (click)=\"processTappedCoffers(-1)\" color=\"primary\">\n        <mat-icon>chevron_left</mat-icon>\n      </button>\n      <span>{{state.tappedCoffers}}</span>\n      <button mat-icon-button (click)=\"processTappedCoffers(1)\" color=\"primary\">\n        <mat-icon>chevron_right</mat-icon>\n      </button>\n    </span>\n    <span>Tap Coffers</span>\n  </div>\n  <div>\n    <button (click)=\"calculate()\" mat-button> Tap Coffer {{state.tappedCoffers}} </button>\n  </div> -->\n  <!-- <div>\n  <img src=\"/assets/cabal-coffers.jpeg\" alt=\"Cabal Coffers\" class=\"card\" (click)=\"tapped = tapped ? false : true \"\n    [ngClass]=\"{'tapped': tapped}\"> -->\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    MatIconModule,\n    MatButtonModule,\n    MatSlideToggleModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}